#!/bin/bash

# Print script header
cat << "EOF"
 _______  ______    _________ _______  _______  _        _______ 
(       )(  ___ \   \__   __/(  ___  )(  ___  )( \      (  ____ \
| () () || (   ) )     ) (   | (   ) || (   ) || (      | (    \/
| || || || (__/ /_____ | |   | |   | || |   | || |      | (_____ 
| |(_)| ||  __ ((_____)| |   | |   | || |   | || |      (_____  )
| |   | || (  \ \      | |   | |   | || |   | || |            ) |
| )   ( || )___) )     | |   | (___) || (___) || (____/\/\____) |
|/     \||/ \___/      )_(   (_______)(_______)(_______/\_______)

                                        @sakibulalikhan -- My BlackBox Tools :)

EOF

# Function to check if a package is installed
is_installed() {
    pacman -Qi "$1" &> /dev/null
}

# Function to install a package using yay or pacman
install_package() {
    if is_installed "$1"; then
        echo -e "\e[32m[✔]\e[0m $1 is already installed."
    else
        # Use yay directly, it will handle sudo if required
        if yay -S --noconfirm "$1" &> /dev/null; then
            echo -e "\e[32m[✔]\e[0m $1 has been installed."
        else
            echo -e "\e[31m[X]\e[0m Failed to install $1."
        fi
    fi
}

# Function to display category headers
display_category() {
    echo -e "\n\e[1m$1\e[0m"
}

# Function to display script usage
display_help() {
    echo -e "\n\e[1mUsage:\e[0m"
    echo "  -h, --help        Display this help message."
    echo "  -a, --all         Install all tools."
    echo "  -n, --networks    Install network tools."
    echo "  -e, --exploits    Install exploitation tools."
    echo "  -f, --forensics   Install forensics tools."
    echo "  -w, --web         Install web application tools."
    echo "  -u, --utilities   Install utility tools."
    exit 1
}

# Parse command line options
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -h|--help) display_help ;;
        -a|--all) install_all=true ;;
        -n|--networks) install_networks=true ;;
        -e|--exploits) install_exploits=true ;;
        -f|--forensics) install_forensics=true ;;
        -w|--web) install_web=true ;;
        -u|--utilities) install_utilities=true ;;
        *) echo "Unknown parameter: $1"; exit 1 ;;
    esac
    shift
done

echo -e "\e[1mInstalling Tools\e[0m"

# Install yay if not installed
if ! command -v yay &> /dev/null; then
    echo -e "\e[1mInstalling Yay\e[0m"
    sudo pacman -S --noconfirm yay &> /dev/null
fi

# Install tools based on categories
if [[ $install_all ]]; then
    display_category "Installing All Tools"
    install_package "nmap"
    install_package "naabu"
    install_package "assetfinder"
    install_package "subjack"
    install_package "amass"
    install_package "waybackurls"
    install_package "jq"
    install_package "gowitness"
    install_package "httprobe"
    install_package "wafw00f"
    install_package "whatweb"
    install_package "quickscope"
    install_package "ghidra"
    install_package "sqlmap"
    install_package "rustscan"
    install_package "ghauri"
    install_package "nosqlmap"
    install_package "gobuster"
    install_package "ffuf"
    install_package "dirb"
    install_package "seclists"
    install_package "hydra-gtk"
    install_package "metasploit-framework"
    install_package "wpscan"
    install_package "hashcat"
    install_package "john"
    install_package "binwalk"
    install_package "foremost"
    install_package "yara"
    install_package "gdb"
    install_package "autopsy"
    install_package "wfuzz"
    install_package "wapiti"
    install_package "maltego"
    install_package "haiti"
    install_package "nuclei"
    install_package "recon-ng"
    install_package "ncat"
    install_package "wget"
    install_package "curl"
    install_package "openssh"
    install_package "hashid"
    install_package "wordlists"
elif [[ $install_networks ]]; then
    display_category "Network Tools"
    install_package "nmap"
    install_package "naabu"
    install_package "assetfinder"
    install_package "subjack"
    install_package "amass"
    install_package "waybackurls"
    install_package "jq"
    install_package "gowitness"
    install_package "httprobe"
    install_package "wafw00f"
    install_package "whatweb"
    install_package "quickscope"
    install_package "ghidra"
    install_package "sqlmap"
    install_package "rustscan"
    install_package "ghauri"
    install_package "nosqlmap"
    install_package "gobuster"
    install_package "ffuf"
    install_package "dirb"
    install_package "seclists"
elif [[ $install_exploits ]]; then
    display_category "Exploitation Tools"
    install_package "hydra-gtk"
    install_package "metasploit-framework"
    install_package "sqlmap"
    install_package "wpscan"
    install_package "hashcat"
    install_package "john"
elif [[ $install_forensics ]]; then
    display_category "Forensics Tools"
    install_package "binwalk"
    install_package "foremost"
    install_package "yara"
    install_package "gdb"
    install_package "autopsy"
elif [[ $install_web ]]; then
    display_category "Web Application Tools"
    install_package "wfuzz"
    install_package "wapiti"
    install_package "maltego"
    install_package "haiti"
    install_package "nuclei"
    install_package "recon-ng"
elif [[ $install_utilities ]]; then
    display_category "Utilities"
    install_package "ncat"
    install_package "wget"
    install_package "curl"
    install_package "openssh"
    install_package "hashid"
    install_package "wordlists"
fi

echo -e "\n\e[1mSelected tools have been installed successfully.\e[0m"
